/**
 * @file peripheral.cpp
 * @author Javnson (javnson@zju.edu.cn)
 * @brief 
 * @version 0.1
 * @date 2024-09-30
 * 
 * @copyright Copyright GMP(c) 2024
 * 
 */

// This file's framework is generated by bsp_c1
#include <core/gmp_core.hpp>
#include <ctl/ctl.config.h>



//////////////////////////////////////////////////////////////////////////
// Peripherals implement classes
//gmp_uart_stm32_impl_t dbg_uart(&huart1);


//////////////////////////////////////////////////////////////////////////
// Devices on the peripheral

void gmp_setup_peripheral()
{
//	// start DMA first
//	HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_data, 6);

//	// Enable HRTIM
//	HAL_HRTIM_WaveformCounterStart(&hhrtim1,
//		HRTIM_TIMERID_MASTER | HRTIM_TIMERID_TIMER_A | HRTIM_TIMERID_TIMER_B);

//	// Enable TIM16 for CPU usage counter
//	HAL_TIM_Base_Start(&htim16);


	// ADC enable
	//__HAL_ADC_ENABLE_IT(&hadc1, ADC_IT_EOS);
}

// This function should be implement by bsp_c1
void gmp_init_peripheral_tree()
{
	// enable debug port
#if defined SPECIFY_ENABLE_DEFUALT_DEBUG_PRINT_FUNC
//	default_debug_dev = &dbg_uart;
#endif // SPECIFY_ENABLE_DEFUALT_DEBUG_PRINT_FUNC


}

//////////////////////////////////////////////////////////////////////////
// interrupt reaction



