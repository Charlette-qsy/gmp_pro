/**
 * @file peripheral_mapping.cpp
 * @author Javnson (javnson@zju.edu.cn)
 * @brief 
 * @version 0.1
 * @date 2024-09-30
 * 
 * @copyright Copyright GMP(c) 2024
 * 
 */

// This file's framework is generated by bsp_c1
#include <core/gmp_core.hpp>
#include <ctl/ctl.config.h>



//////////////////////////////////////////////////////////////////////////
// Peripherals implement classes
//gmp_uart_stm32_impl_t dbg_uart(&huart1);

#define GPIO_LED_Pin GPIO_PIN_15
#define GPIO_LED_GPIO_Port GPIOC
#define RS485_DIR_Pin GPIO_PIN_2
#define RS485_DIR_GPIO_Port GPIOF
#define RS485_TXRX_Pin GPIO_PIN_2
#define RS485_TXRX_GPIO_Port GPIOA
#define LORA_MISO_Pin GPIO_PIN_3
#define LORA_MISO_GPIO_Port GPIOA
#define LORA_MOSI_Pin GPIO_PIN_4
#define LORA_MOSI_GPIO_Port GPIOA
#define LORA_NRST_Pin GPIO_PIN_1
#define LORA_NRST_GPIO_Port GPIOB
#define LORA_NSS_Pin GPIO_PIN_8
#define LORA_NSS_GPIO_Port GPIOA
#define LORA_RX_DONE_Pin GPIO_PIN_6
#define LORA_RX_DONE_GPIO_Port GPIOC
#define SPI1_NSS_Pin GPIO_PIN_15
#define SPI1_NSS_GPIO_Port GPIOA
#define LORA_SCK_Pin GPIO_PIN_8
#define LORA_SCK_GPIO_Port GPIOB


extern ADC_HandleTypeDef hadc1;

extern I2C_HandleTypeDef hi2c2;

extern SPI_HandleTypeDef hspi1;
extern SPI_HandleTypeDef hspi2;

extern UART_HandleTypeDef huart1;
extern UART_HandleTypeDef huart2;
extern DMA_HandleTypeDef hdma_usart1_rx;
extern DMA_HandleTypeDef hdma_usart1_tx;


//////////////////////////////////////////////////////////////////////////
// Peripheral general port

gpio_halt spi1_ncs;
gpio_halt spi2_ncs;

spi_halt spi1;
spi_halt spi2;

uart_halt uart1;
uart_halt uart2;

duplex_ift uart1_if;
data_gt recv_buffer[128];
data_gt uart1_rx[128];
data_gt uart1_tx[128];

iic_halt iic;


//////////////////////////////////////////////////////////////////////////
// Devices on the peripheral

// In this function, all the peripheral should be implement.
void gmp_setup_peripheral()
{}

// This function should be implement by bsp_c1
void gmp_init_peripheral_tree()
{
	
	gmp_hal_uart_setup(&uart1, &huart1, &hdma_usart1_tx, &hdma_usart1_rx, &uart1_if,recv_buffer);
	
	gmp_hal_iic_setup(&iic, &hi2c2);
	
	gmp_hal_gpio_setup(&spi1_ncs, SPI1_NSS_GPIO_Port, SPI1_NSS_Pin);
	gmp_hal_spi_setup(&spi1, &hspi1, &spi1_ncs);
	
	gmp_hal_gpio_setup(&spi2_ncs, LORA_NRST_GPIO_Port, LORA_NSS_Pin);
	gmp_hal_spi_setup(&spi2, &hspi2, &spi2_ncs);
	
	
}

//////////////////////////////////////////////////////////////////////////
// interrupt reaction



